
; https://developer.arm.com/documentation/102374/0102/Registers-in-AArch64---general-purpose-registers
.max_stack_size 4000

.data
  :data_label .word 2
  :1          .word 1

  :arr        .word 1 2 3 4 ; array of 4 8-byte integers (1, 2, 3, 4)

.text
  PCR W3 #1
  LDA W3 W3 0
  PCR W4 #ins_label    ; use PC-relative offset to go to address to instruction and puts it in W4
  PCR W1 #data_label   ; use PC-relative offset to go to address of .word constant and puts it in W1
  LDA W1 W1 0            ; load value from address
  :ins_label 
  SUB W1 W1 W3
  SYS 1
  CPSI W1 0           ; check if W1 is equal to 0
  BNE #ins_label      ; if not equal to 0, repeat loop

  LDI W0 0            ; set exit code to 0
  SYS 0               ; end program with the return integer stored in register W4
    